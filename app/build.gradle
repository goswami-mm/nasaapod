apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.manmohan.nasaapod"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
def androidXVersion = '1.0.2'
def androidXRVVersion = '1.0.0'
def constraintXVersion = '1.1.3'
def retrofitVersion = '2.6.0'
def okhttp3Version = '3.8.0'
def rxJavaVersion = '2.1.0'
def daggerVersion = '2.19'
def gsonVersion = '2.6.2'
def archVersion = '1.1.1'
def picassoVersion = '2.5.2'
//Test dependencies
def mockitoVersion = '2.5.0'
def jraskaTestVersion = '0.2.1'
def junitVersion = '4.12'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation "androidx.core:core-ktx:$androidXVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintXVersion"
    implementation "androidx.recyclerview:recyclerview:$androidXRVVersion"
    implementation "androidx.cardview:cardview:$androidXRVVersion"

    implementation "com.squareup.picasso:picasso:$picassoVersion"

    implementation "android.arch.lifecycle:extensions:$archVersion"
    kapt "android.arch.lifecycle:compiler:$archVersion"
    testImplementation "android.arch.core:core-testing:$archVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    //Room database
    implementation "android.arch.persistence.room:runtime:$archVersion"
    implementation "android.arch.persistence.room:rxjava2:$archVersion"
    kapt "android.arch.persistence.room:compiler:$archVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    testImplementation "junit:junit:$junitVersion"
    //Mockito
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.jraska.livedata:testing:$jraskaTestVersion"
    testImplementation "android.arch.core:core-testing:$archVersion"
//    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC3'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}
